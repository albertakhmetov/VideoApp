<UserControl 
    x:Class="VideoApp.Controls.PlayerToolbarControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:VideoApp.Controls"
    xmlns:models="using:VideoApp.Core.Models"
    xmlns:converters="using:VideoApp.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Border 
        MaxWidth="800"
        Margin="8"
        VerticalAlignment="Bottom"
        Background="{ThemeResource LayerOnMicaBaseAltFillColorDefaultBrush}"
        BorderBrush="{ThemeResource ControlElevationBorderBrush}"
        BorderThickness="1"
        CornerRadius="8"
        Padding="4,8,4,8">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.Resources>
                <converters:TimeValueConverter x:Key="TimeValueConverter"/>
                <converters:VisibilityConverter x:Key="VisibilityConverter"/>
            </Grid.Resources>

            <ProgressBar
                Grid.Column="0"
                Margin="5"
                IsIndeterminate="True"
                Visibility="{x:Bind converters:Helpers.VisibleIf(ViewModel.State, models:PlaybackState.Opening), Mode=OneWay}"/>

            <Grid 
                Grid.Column="0"
                Visibility="{x:Bind converters:Helpers.VisibleIf(ViewModel.State, models:PlaybackState.Playing, models:PlaybackState.Paused), Mode=OneWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="80"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="80"/>
                </Grid.ColumnDefinitions>

                <TextBlock 
                    Grid.Column="0"
                    Margin="5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="{x:Bind converters:Helpers.ToString(ViewModel.Position), Mode=OneWay}"/>

                <local:AppSlider
                    Grid.Column="1"  
                    MaxValue="{x:Bind ViewModel.Duration, Mode=OneWay}"
                    NavigationStepFrequency="10"
                    StepFrequency="1"
                    Value="{x:Bind ViewModel.Position, Mode=TwoWay}"
                    ThumbTipValueConverter="{StaticResource TimeValueConverter}"
                    PositionCommand="{x:Bind ViewModel.PositionCommand}"/>

                <TextBlock 
                    Grid.Column="2"
                    Margin="5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="{x:Bind converters:Helpers.ToString(ViewModel.Duration), Mode=OneWay}"/>
            </Grid>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left">
                    <Button Style="{StaticResource PlaybackButton}" Command="{x:Bind ViewModel.OpenMediaFileCommand}">
                        <Button.Content>
                            <FontIcon Margin="0,0,0,0" Glyph="&#xF847;" />
                        </Button.Content>
                    </Button>

                    <Button 
                        Style="{StaticResource PlaybackButton}"
                        IsEnabled="{x:Bind converters:Helpers.IsEnabled(ViewModel.MruListViewModel.Items.Count), Mode=OneWay}">
                        <Button.Content>
                            <FontIcon Margin="0,0,0,0" Glyph="&#xE81C;" />
                        </Button.Content>

                        <Button.Flyout>
                            <Flyout x:Name="MruFlyout">
                                <ItemsRepeater Margin="-8" ItemsSource="{x:Bind ViewModel.MruListViewModel.Items}">
                                    <ItemsRepeater.ItemTemplate>
                                        <DataTemplate>
                                            <local:AppItemContainer Command="{Binding SelectCommand}" Padding="2">
                                                <TextBlock Text="{Binding Name}" Margin="8,4"/>
                                            </local:AppItemContainer>
                                        </DataTemplate>
                                    </ItemsRepeater.ItemTemplate>
                                </ItemsRepeater>
                            </Flyout>
                        </Button.Flyout>
                    </Button>

                    <Button
                        Style="{StaticResource PlaybackButton}"
                        IsEnabled="{x:Bind converters:Helpers.IsEnabled(ViewModel.PlaylistViewModel.Items.Count), Mode=OneWay}">
                        <Button.Content>
                            <FontIcon Margin="0,0,0,0" Glyph="&#xE90B;" />
                        </Button.Content>

                        <Button.Flyout>
                            <Flyout x:Name="PlaylistFlyout">
                                <ItemsRepeater Margin="-8" ItemsSource="{x:Bind ViewModel.PlaylistViewModel.Items}">
                                    <ItemsRepeater.ItemTemplate>
                                        <DataTemplate>
                                            <local:AppItemContainer Command="{Binding SelectCommand}" Padding="2">
                                                <Grid>
                                                    <FontIcon
                                                        HorizontalAlignment="Left"
                                                        Margin="4,0"
                                                        Glyph="&#xEDB5;" 
                                                        Visibility="{Binding IsCurrent, Converter={StaticResource VisibilityConverter}}"/>
                                                    <TextBlock Text="{Binding Name}" Margin="36,4,8,4"/>
                                                </Grid>
                                            </local:AppItemContainer>
                                        </DataTemplate>
                                    </ItemsRepeater.ItemTemplate>
                                </ItemsRepeater>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </StackPanel>

                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <Button 
                        Command="{x:Bind ViewModel.SkipBackCommand}"
                        Visibility="{x:Bind converters:Helpers.VisibleIf(ViewModel.State, models:PlaybackState.Playing, models:PlaybackState.Paused), Mode=OneWay}"
                        Style="{StaticResource PlaybackButton}">
                        <Button.Content>
                            <FontIcon Margin="0,0,0,0" Glyph="&#xEB9E;" />
                        </Button.Content>
                    </Button>

                    <Button 
                        Style="{StaticResource PlayButton}"
                        Width="48" Height="48"
                        Command="{x:Bind ViewModel.TogglePlaybackCommand, Mode=OneTime}">
                        <Button.Content>
                            <Grid>
                                <FontIcon 
                                    Margin="2,2,0,0"
                                    Visibility="{x:Bind converters:Helpers.VisibleIfNot(ViewModel.State, models:PlaybackState.Playing), Mode=OneWay}"
                                    Glyph="&#xF5B0;" />
                                <FontIcon 
                                    Margin="1,1,0,0"
                                    Visibility="{x:Bind converters:Helpers.VisibleIf(ViewModel.State, models:PlaybackState.Playing), Mode=OneWay}"
                                    Glyph="&#xF8AE;" />
                            </Grid>
                        </Button.Content>
                    </Button>

                    <Button
                        Command="{x:Bind ViewModel.SkipForwardCommand}"                            
                        Visibility="{x:Bind converters:Helpers.VisibleIf(ViewModel.State, models:PlaybackState.Playing, models:PlaybackState.Paused), Mode=OneWay}"
                        Style="{StaticResource PlaybackButton}">
                        <Button.Content>
                            <FontIcon Margin="0,0,0,0" Glyph="&#xEB9D;" />
                        </Button.Content>
                    </Button>
                </StackPanel>

                <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button 
                        Style="{StaticResource PlaybackButton}"
                        Visibility="{x:Bind converters:Helpers.VisibleIf(ViewModel.State, models:PlaybackState.Playing, models:PlaybackState.Paused), Mode=OneWay}"
                        IsEnabled="{x:Bind converters:Helpers.IsEnabled(ViewModel.AudioTracks.Length, ViewModel.SubtitleTracks.Length), Mode=OneWay}">
                        <Button.Content>
                            <FontIcon Margin="0,0,0,0" Glyph="&#xED1E;" />
                        </Button.Content>

                        <Button.Resources>
                            <Style x:Key="TrackMenuSeparator" TargetType="MenuFlyoutSeparator">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="MenuFlyoutSeparator">
                                            <TextBlock
                                                Text="{Binding}"
                                                Margin="12,8,0,4"
                                                Foreground="{ThemeResource TextOnAccentFillColorDisabledBrush}"
                                                Style="{ThemeResource CaptionTextBlockStyle}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>

                        <Button.Flyout>
                            <MenuFlyout x:Name="TracksFlyout">
                                <MenuFlyoutSeparator Style="{StaticResource TrackMenuSeparator}" DataContext="Audio"/>


                                <MenuFlyoutSeparator Style="{StaticResource TrackMenuSeparator}" DataContext="Subtitle"/>

                            </MenuFlyout>
                        </Button.Flyout>
                    </Button>

                    <Button Style="{StaticResource PlaybackButton}">
                        <Button.Content>
                            <FontIcon 
                                Margin="0,0,0,0"
                                Glyph="{x:Bind converters:Helpers.ToVolumeIcon(ViewModel.Volume), Mode=OneWay}" />
                        </Button.Content>

                        <Button.Flyout>
                            <Flyout x:Name="VolumeFlyout" Placement="Bottom">
                                <Grid MinWidth="200" MaxWidth="300">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <FontIcon 
                                        Grid.Column="0"
                                        Margin="0,0,8,0"
                                        Glyph="{x:Bind converters:Helpers.ToVolumeIcon(ViewModel.Volume), Mode=OneWay}" />

                                    <Slider 
                                        Grid.Column="1"
                                        Margin="5,0,5,0"
                                        Maximum="100"
                                        Value="{x:Bind ViewModel.Volume, Mode=TwoWay}"/>
                                </Grid>
                            </Flyout>
                        </Button.Flyout>
                    </Button>

                    <Button Style="{StaticResource PlaybackButton}">
                        <Button.Content>
                            <FontIcon Margin="0,0,0,0" Glyph="&#xE712;" />
                        </Button.Content>

                        <Button.Flyout>
                            <MenuFlyout x:Name="MenuFlyout">
                                <MenuFlyoutItem
                                    Icon="FullScreen"
                                    Text="Full Screen"
                                    Command="{x:Bind ViewModel.ToggleFullScreenCommand}"/>

                                <MenuFlyoutSeparator/>

                                <MenuFlyoutItem
                                    Text="Exit"
                                    Command="{x:Bind ViewModel.ExitCommand}"/>
                            </MenuFlyout>
                        </Button.Flyout>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>
    </Border>
</UserControl>
