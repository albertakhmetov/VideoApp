<UserControl
    x:Class="VideoApp.Views.ControlView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:VideoApp.Views"
    xmlns:models="using:VideoApp.Core.Models"
    xmlns:controls="using:VideoApp.Controls"
    xmlns:converters="using:VideoApp.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid 
        VerticalAlignment="Stretch"
        HorizontalAlignment="Stretch">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="Visibility">
                <VisualState x:Name="Visible">
                    <Storyboard>
                        <DoubleAnimation 
                            Duration="0:0:0.1" To="1"
                            Storyboard.TargetProperty="Opacity" 
                            Storyboard.TargetName="Toolbar"/>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Hidden">
                    <Storyboard>
                        <DoubleAnimation 
                            Duration="0:0:0.15" To="0"
                            Storyboard.TargetProperty="Opacity" 
                            Storyboard.TargetName="Toolbar"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid x:Name="Toolbar"
              Visibility="{x:Bind converters:Helpers.VisibleIf(Toolbar.Opacity), Mode=OneWay}"
              Grid.Row="1"
              Background="{ThemeResource LayerOnMicaBaseAltFillColorDefaultBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" MinHeight="8"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ProgressBar
                Grid.Row="0"
                Margin="8"
                IsIndeterminate="True"
                Visibility="{x:Bind ViewModel.PlaybackViewModel.IsLoading, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"/>

            <Grid 
                Grid.Row="0"
                Margin="8"
                Visibility="{x:Bind ViewModel.PlaybackViewModel.IsActivePlayback, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock 
                    Grid.Column="0"
                    MinWidth="70"
                    TextAlignment="Center"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="{x:Bind converters:Helpers.ToString(ViewModel.PlaybackViewModel.Position), Mode=OneWay}"/>
                
                <controls:AppSlider
                    Grid.Column="1" 
                    VerticalAlignment="Center"
                    MaxValue="{x:Bind ViewModel.PlaybackViewModel.Duration, Mode=OneWay}"
                    NavigationStepFrequency="10"
                    StepFrequency="1"
                    Value="{x:Bind ViewModel.PlaybackViewModel.Position, Mode=OneWay}"
                    ThumbTipValueConverter="{StaticResource TimeValueConverter}"
                    PositionCommand="{x:Bind ViewModel.PlaybackViewModel.PositionCommand}"/>
                
                <Button
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    Command="{x:Bind ViewModel.PlaybackViewModel.RemainingTimeCommand}"
                    Style="{StaticResource ControlButton}"
                    Padding="2">
                    <Grid>
                        <TextBlock 
                            MinWidth="70"
                            TextAlignment="Center"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Visibility="{x:Bind converters:Helpers.VisibleIfNot(ViewModel.PlaybackViewModel.IsRemainingTimeEnabled), Mode=OneWay}"
                            Text="{x:Bind converters:Helpers.ToString(ViewModel.PlaybackViewModel.Duration), Mode=OneWay}"/>

                        <TextBlock 
                            MinWidth="70"
                            TextAlignment="Center"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Visibility="{x:Bind converters:Helpers.VisibleIf(ViewModel.PlaybackViewModel.IsRemainingTimeEnabled), Mode=OneWay}">
                            <Run Text="-"/>
                            <Run Text="{x:Bind converters:Helpers.ToString(ViewModel.PlaybackViewModel.RemainingTime), Mode=OneWay}"/>
                        </TextBlock>
                    </Grid>
                </Button>

            
            </Grid>

            <Grid Grid.Row="1" Margin="8,0,8,8">
                <Grid.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource ControlButton}"/>
                    <Style TargetType="FontIcon">
                        <Setter Property="FontSize" Value="16"/>
                    </Style>
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left">
                    <Button Command="{x:Bind ViewModel.OpenMediaFileCommand}">
                        <Button.Content>
                            <FontIcon Margin="0,0,0,0" Glyph="&#xF847;" />
                        </Button.Content>
                    </Button>

                    <Button IsEnabled="{x:Bind ViewModel.MruListViewModel.HasItems, Mode=OneWay}">
                        <Button.Content>
                            <FontIcon Margin="0,0,0,0" Glyph="&#xE81C;" />
                        </Button.Content>

                        <Button.Flyout>
                            <Flyout x:Name="MruFlyout">
                                <ItemsRepeater Margin="-8" ItemsSource="{x:Bind ViewModel.MruListViewModel.Items}">
                                    <ItemsRepeater.ItemTemplate>
                                        <DataTemplate>
                                            <controls:AppItemContainer Command="{Binding SelectCommand}" Padding="2">
                                                <TextBlock Text="{Binding Name}" Margin="8,4"/>
                                            </controls:AppItemContainer>
                                        </DataTemplate>
                                    </ItemsRepeater.ItemTemplate>
                                </ItemsRepeater>
                            </Flyout>
                        </Button.Flyout>
                    </Button>

                    <Button IsEnabled="{x:Bind ViewModel.PlaylistViewModel.HasItems, Mode=OneWay}">
                        <Button.Content>
                            <FontIcon Margin="0,0,0,0" Glyph="&#xE90B;" />
                        </Button.Content>

                        <Button.Flyout>
                            <Flyout x:Name="PlaylistFlyout">
                                <ItemsRepeater Margin="-8" ItemsSource="{x:Bind ViewModel.PlaylistViewModel.Items}">
                                    <ItemsRepeater.ItemTemplate>
                                        <DataTemplate>
                                            <controls:AppItemContainer 
                                                IsSelected="{Binding IsCurrent, Mode=OneWay}"
                                                Command="{Binding SelectCommand}" 
                                                Padding="2">
                                                <TextBlock Text="{Binding Name}" Margin="4,4"/>
                                            </controls:AppItemContainer>
                                        </DataTemplate>
                                    </ItemsRepeater.ItemTemplate>
                                </ItemsRepeater>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </StackPanel>

                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <Button 
                        Command="{x:Bind ViewModel.PlaybackViewModel.SkipBackCommand}"
                        IsEnabled="{x:Bind ViewModel.PlaybackViewModel.IsActivePlayback, Mode=OneWay}">
                        <Button.Content>
                            <FontIcon Glyph="&#xEB9E;">
                                <FontIcon.RenderTransform>
                                    <TranslateTransform X="-1"/>
                                </FontIcon.RenderTransform>
                            </FontIcon>
                        </Button.Content>
                    </Button>

                    <Button
                        IsEnabled="{x:Bind ViewModel.PlaybackViewModel.CanGoPrevious, Mode=OneWay}"
                        Command="{x:Bind ViewModel.PlaybackViewModel.GoPreviousCommand}">
                        <Button.Content>
                            <FontIcon Glyph="&#xE892;">
                                <FontIcon.RenderTransform>
                                    <TranslateTransform X="-1"/>
                                </FontIcon.RenderTransform>
                            </FontIcon>
                        </Button.Content>
                    </Button>

                    <Button 
                        Style="{StaticResource PlayButton}"
                        IsEnabled="{x:Bind converters:Helpers.Not(ViewModel.PlaybackViewModel.IsLoading), Mode=OneWay}"
                        Command="{x:Bind ViewModel.PlaybackViewModel.TogglePlaybackCommand, Mode=OneTime}">
                        <Button.Content>
                            <Grid>
                                <FontIcon 
                                    Visibility="{x:Bind converters:Helpers.VisibleIfNot(ViewModel.PlaybackViewModel.IsPlaying), Mode=OneWay}"
                                    Glyph="&#xF5B0;">
                                    <FontIcon.RenderTransform>
                                        <TranslateTransform X="0.5" Y="0.5"/>
                                    </FontIcon.RenderTransform>
                                </FontIcon>
                                <FontIcon 
                                    Visibility="{x:Bind converters:Helpers.VisibleIf(ViewModel.PlaybackViewModel.IsPlaying), Mode=OneWay}"
                                    Glyph="&#xF8AE;">
                                    <FontIcon.RenderTransform>
                                        <TranslateTransform X="0.5" Y="0.5"/>
                                    </FontIcon.RenderTransform>
                                </FontIcon>
                            </Grid>
                        </Button.Content>
                    </Button>

                    <Button
                        IsEnabled="{x:Bind ViewModel.PlaybackViewModel.CanGoNext, Mode=OneWay}"
                        Command="{x:Bind ViewModel.PlaybackViewModel.GoNextCommand}">
                        <Button.Content>
                            <FontIcon Margin="2,0,0,0" Glyph="&#xE893;">
                                <FontIcon.RenderTransform>
                                    <TranslateTransform X="1"/>
                                </FontIcon.RenderTransform>
                            </FontIcon>
                        </Button.Content>
                    </Button>

                    <Button
                        Command="{x:Bind ViewModel.PlaybackViewModel.SkipForwardCommand}"                            
                        IsEnabled="{x:Bind ViewModel.PlaybackViewModel.IsActivePlayback, Mode=OneWay}">
                        <Button.Content>
                            <FontIcon Margin="2,0,0,0" Glyph="&#xEB9D;">
                                <FontIcon.RenderTransform>
                                    <TranslateTransform X="1"/>
                                </FontIcon.RenderTransform>
                            </FontIcon>
                        </Button.Content>
                    </Button>
                </StackPanel>

                <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button 
                        Visibility="{x:Bind converters:Helpers.VisibleIf(ViewModel.PlaybackViewModel.IsActivePlayback), Mode=OneWay}"
                        IsEnabled="{x:Bind ViewModel.TracksViewModel.HasTracks, Mode=OneWay}">
                        <Button.Content>
                            <FontIcon Margin="0,0,0,0" Glyph="&#xED1E;" />
                        </Button.Content>

                        <Button.Flyout>
                            <Flyout x:Name="TracksFlyout">
                                <StackPanel Margin="-8">
                                    <TextBlock
                                        Text="Audio"
                                        Margin="4" 
                                        Visibility="{x:Bind converters:Helpers.VisibleIf(ViewModel.TracksViewModel.AudioTracks.Count), Mode=OneWay}"
                                        Foreground="{ThemeResource TextOnAccentFillColorDisabledBrush}"
                                        Style="{ThemeResource CaptionTextBlockStyle}"/>
                                    <ItemsRepeater Margin="4" ItemsSource="{x:Bind ViewModel.TracksViewModel.AudioTracks}">
                                        <ItemsRepeater.ItemTemplate>
                                            <DataTemplate>
                                                <controls:AppItemContainer 
                                                    IsSelected="{Binding IsSelected, Mode=OneWay}"
                                                    Command="{Binding SelectCommand}" 
                                                    Padding="2">
                                                    <TextBlock Text="{Binding Text}" Margin="4,4,8,4"/>
                                                </controls:AppItemContainer>
                                            </DataTemplate>
                                        </ItemsRepeater.ItemTemplate>
                                    </ItemsRepeater>

                                    <TextBlock
                                        Text="Subtitle"
                                        VerticalAlignment="Center"
                                        Margin="4" 
                                        Visibility="{x:Bind converters:Helpers.VisibleIf(ViewModel.TracksViewModel.SubtitleTracks.Count), Mode=OneWay}"
                                        Foreground="{ThemeResource TextOnAccentFillColorDisabledBrush}"
                                        Style="{ThemeResource CaptionTextBlockStyle}"/>
                                    <ItemsRepeater Margin="4" ItemsSource="{x:Bind ViewModel.TracksViewModel.SubtitleTracks}">
                                        <ItemsRepeater.ItemTemplate>
                                            <DataTemplate>
                                                <controls:AppItemContainer 
                                                    IsSelected="{Binding IsSelected, Mode=OneWay}"
                                                    Command="{Binding SelectCommand}" 
                                                    Padding="2">
                                                    <TextBlock Text="{Binding Text}" Margin="4,4,8,4"/>
                                                </controls:AppItemContainer>
                                            </DataTemplate>
                                        </ItemsRepeater.ItemTemplate>
                                    </ItemsRepeater>
                                </StackPanel>
                            </Flyout>
                        </Button.Flyout>
                    </Button>

                    <Button>
                        <Button.Content>
                            <FontIcon 
                                Margin="0,0,0,0"
                                Glyph="{x:Bind converters:Helpers.ToVolumeIcon(ViewModel.PlaybackViewModel.Volume), Mode=OneWay}" />
                        </Button.Content>

                        <Button.Flyout>
                            <Flyout x:Name="VolumeFlyout" Placement="Bottom">
                                <Grid Margin="0,-8" MinWidth="200" MaxWidth="300">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <FontIcon 
                                        Grid.Column="0"
                                        Margin="0,0,8,0"
                                        FontSize="16"
                                        Glyph="{x:Bind converters:Helpers.ToVolumeIcon(ViewModel.PlaybackViewModel.Volume), Mode=OneWay}" />

                                    <controls:AppSlider 
                                        Grid.Column="1"
                                        Margin="5,0,5,0"
                                        MaxValue="100"
                                        NavigationStepFrequency="10"
                                        StepFrequency="1"
                                        ShowToolTip="False"
                                        PositionCommand="{x:Bind ViewModel.PlaybackViewModel.VolumeCommand}"
                                        Value="{x:Bind ViewModel.PlaybackViewModel.Volume, Mode=OneWay}"/>

                                    <TextBlock
                                        Grid.Column="2"
                                        MinWidth="30"
                                        Margin="0,0,-4,0"
                                        TextAlignment="Center"
                                        VerticalAlignment="Center"
                                        Text="{x:Bind ViewModel.PlaybackViewModel.Volume, Mode=OneWay}"/>
                                </Grid>
                            </Flyout>
                        </Button.Flyout>
                    </Button>

                    <Button>
                        <Button.Content>
                            <FontIcon Margin="0,0,0,0" Glyph="&#xE712;" />
                        </Button.Content>

                        <Button.Flyout>
                            <MenuFlyout x:Name="MenuFlyout">
                                <MenuFlyoutItem
                                    Icon="FullScreen"
                                    Text="Full Screen"
                                    Command="{x:Bind ViewModel.ToggleFullScreenCommand}"/>

                                <MenuFlyoutSeparator/>

                                <MenuFlyoutItem
                                    Text="Exit"
                                    Command="{x:Bind ViewModel.ExitCommand}"/>
                            </MenuFlyout>
                        </Button.Flyout>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>

    </Grid>
</UserControl>
